#!/usr/bin/env node
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const OUTPUT = path.resolve(__dirname, '..', '.env.local');

function kv(key, value) {
  if (typeof value === 'string' && value.length > 0) return `${key}=${value}`;
  return `# ${key}=`;
}

async function main() {
  // Prefer explicit SUPABASE_URL for scripts; fallback to VITE_SUPABASE_URL
  const supabaseUrl = process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL || '';

  const lines = [];
  lines.push('# Auto-generated by scripts/setup-env.mjs');
  lines.push('');
  lines.push('# Client-side (Vite) env vars');
  lines.push(kv('VITE_SUPABASE_URL', process.env.VITE_SUPABASE_URL || ''));
  lines.push(kv('VITE_SUPABASE_PUBLISHABLE_KEY', process.env.VITE_SUPABASE_PUBLISHABLE_KEY || ''));
  lines.push(kv('VITE_SUPABASE_ANON_KEY', process.env.VITE_SUPABASE_ANON_KEY || ''));
  lines.push(kv('VITE_WEB3FORMS_ACCESS_KEY', process.env.VITE_WEB3FORMS_ACCESS_KEY || ''));
  lines.push(kv('VITE_BLOG_URL', process.env.VITE_BLOG_URL || ''));
  lines.push('');
  lines.push('# Server-side (scripts) env vars â€” used by migration scripts');
  lines.push(kv('SUPABASE_URL', supabaseUrl));
  // Do NOT default service role; leave blank if not provided
  lines.push(kv('SUPABASE_SERVICE_ROLE_KEY', process.env.SUPABASE_SERVICE_ROLE_KEY || ''));
  lines.push(kv('SUPABASE_BUCKET', process.env.SUPABASE_BUCKET || 'storage'));
  lines.push(kv('EXPORT_FOLDERS', process.env.EXPORT_FOLDERS || 'designs,ai-designs,websites'));
  lines.push(kv('SECTIONS', process.env.SECTIONS || 'designs,websites,ai_designs'));
  lines.push('');

  const content = lines.join('\n') + '\n';
  await fs.writeFile(OUTPUT, content, 'utf8');
  console.log(`Wrote ${OUTPUT}`);
}

main().catch((e) => {
  console.error(e);
  process.exit(1);
});


